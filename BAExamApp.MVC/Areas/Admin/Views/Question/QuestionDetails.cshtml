@using Microsoft.Extensions.Localization
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Common
@model AdminQuestionPageListVM
@ViewBag.TrainerName
@inject IStringLocalizer<SharedModelResource> localizer
@{
    var questionState = (State)ViewData["QuestionDetail_State"];
    ViewData["Title"] = ViewLocalizer["QuesitionDifficulty_Name"];
    var currentPageSize = ViewBag.PageSize ?? 10;
}


<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11">
</head>
<div class="card py-3">
    <div class="d-flex justify-content-between ps-9 pt-6">
        <!--begin::Card title-->
        <div>
            <h3 class="fw-bolder ps-5">@SharedLocalizer["Question_Detail"]</h3>
        </div>
        <div class="d-flex justify-content-end">
            <a class="btn btn-secondary align-self-center ms-2 mx-4" asp-action="GetQuestionsByGivenValues" method="post" asp-route-state=@Model.AdminQuestionApprovedVM.State asp-route-adminQuestionListVM="">@SharedLocalizer["Back_List"]</a>
            @if ((Model.AdminQuestionApprovedVM.State == State.Awaited))
            {

                <form action="/Trainer/QuestionController/QuestionList" method="post">
                    @*
                ======================================================
                Asagidaki kod ileri bir tarihe kadar kapali kalacak
                ======================================================
                *@
                    @*<button class="btn btn-info me-2" asp-action="Test" asp-route-id=@Model.Id>@ViewLocalizer["Test"]</button>*@
                    <button class="btn btn-success me-2" asp-action="Approve" asp-route-id=@Model.AdminQuestionApprovedVM.Id>@SharedLocalizer["Approve"]</button>
                </form>
                <!-- Revize butonu -->
                <button type="button" class="btn btn-warning me-2" data-bs-toggle="modal" data-bs-target="#reviewModal">
                    @SharedLocalizer["Revise"]
                </button>
                <button type="button" class="btn btn-danger me-2" data-bs-toggle="modal" data-bs-target="#rejectModal">
                    @SharedLocalizer["Reject"]
                </button>
            }

        </div>
        <!--end::Card title-->
    </div>
</div>
<div class="accordion " id="accordionExample1">
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingThree">
            <button class="accordion-button collapse show fw-bolder d-flex align-items-center" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">

                <i class="bi bi-chevron-down me-2"></i>
                @SharedLocalizer["Question_Content"]
            </button>
        </h2>
        <div id="collapseThree" class="accordion-collapse collapse show" aria-labelledby="headingThree" data-bs-parent="#accordionExample1">
            <div class="accordion-body">
                <div class="card-body row fs-6 py-10 px-10 py-lg-10 px-lg-15">
                    <div class="row mb-7 col-12">
                        <label class="w-150px fw-bold ">
                            @Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.Content):
                        </label>
                        <div class="col-12 col-sm-8">
                            <span class="fw-bolder fs-6 text-gray-800">
                                @Html.DisplayFor(model => model.AdminQuestionApprovedVM.Content)
                            </span>
                        </div>
                    </div>
                    @if (Model.AdminQuestionApprovedVM.Image != null)
                    {
                    <div class="row mb-7 col-12">
                        <label class="w-250px fw-bold ">Görsel:</label>
                        <div class="col-12 text-center">
                            <img src="data:image/jpeg;base64,@Model.AdminQuestionApprovedVM.Image" class="img-fluid rounded" alt="image" style="max-width:100%; height:auto;" />
                        </div>
                    </div>

                    }
                  
                    <div class="row mb-7 mt-5 col-12">
                        <label class="w-150px fw-bold ">
                            @Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.QuestionAnswers):
                        </label>
                        <div class="col-12 col-sm-6">
                            @if (Model.AdminQuestionApprovedVM.QuestionType == QuestionType.TrueFalse)
                            {
                            @foreach (var item in Model.AdminQuestionApprovedVM.QuestionAnswers)
                            {
                                if (item.IsRightAnswer)
                                {
                                    if (item.IsAnswerImage)
                                    {
                                        <div class="col-lg-12">
                                            <i class="bi bi-circle-fill" style="color: green;"></i>
                                            <img id="defaultImage"
                                                 class="col-lg-12 img-fluid img-thumbnail"
                                                 src="@item.Answer"
                                                 style="max-height:150px;max-width:300px; margin-bottom:20px;"
                                                 alt="Profile" />
                                            <span class="badge badge-success">@* @SharedLocalizer["True"] *@</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <p class="fw-bolder fs-6 text-gray-800">
                                            <i class="bi bi-circle-fill" style="color: green;"></i>
                                            @item.Answer
                                            <span class="badge badge-success">@* @SharedLocalizer["True"] *@</span>
                                        </p>
                                    }
                                }
                                else
                                {
                                    if (item.IsAnswerImage)
                                    {
                                        <div class="col-lg-12">
                                            <i class="bi bi-circle-fill"></i>
                                            <img id="defaultImage"
                                                 class="col-lg-12 img-fluid img-thumbnail"
                                                 src="@item.Answer"
                                                 style="max-height:150px;max-width:300px; margin-bottom:20px;"
                                                 alt="Profile" />
                                        </div>

                                    }
                                    else
                                    {
                                        <p class="fw-bolder fs-6 text-gray-800">
                                            <i class="bi bi-circle-fill"></i>
                                            @item.Answer
                                        </p>
                                    }
                                }
                            }
                            }
                            else
                            {
                            @foreach (var item in Model.AdminQuestionApprovedVM.QuestionAnswers)
                            {
                                if (item.IsRightAnswer)
                                {
                                    if (item.IsAnswerImage)
                                    {
                                        <div class="col-lg-12">
                                            <i class="bi bi-circle-fill" style="color: green;"></i>
                                            <img id="defaultImage"
                                                 class="col-lg-12 img-fluid img-thumbnail"
                                                 src="@item.Answer"
                                                 style="max-height:150px;max-width:300px; margin-bottom:20px;"
                                                 alt="Profile" />
                                            <span class="badge badge-success">@* @SharedLocalizer["True"] *@</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <p class="fw-bolder fs-6 text-gray-800">
                                            <i class="bi bi-circle-fill" style="color: green;"></i>
                                            @item.Answer
                                            <span class="badge badge-success">@* @SharedLocalizer["True"] *@</span>
                                        </p>
                                    }
                                }
                                else
                                {
                                    if (item.IsAnswerImage)
                                    {
                                        <div class="col-lg-12">
                                            <i class="bi bi-circle-fill"></i>
                                            <img id="defaultImage"
                                                 class="col-lg-12 img-fluid img-thumbnail"
                                                 src="@item.Answer"
                                                 style="max-height:150px;max-width:300px; margin-bottom:20px;"
                                                 alt="Profile" />
                                        </div>
                                    }
                                    else
                                    {
                                        <p class="fw-bolder fs-6 text-gray-800">
                                            <i class="bi bi-circle-fill"></i>
                                            @item.Answer
                                        </p>
                                    }
                                }
                            }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>




    <!-- RequesterAdmin ve RequestDescription alanı -->
    <!-- Requester_Admin ve Revize Talebi alanları -->
    @* @if (!string.IsNullOrEmpty(Model.RequesterAdmin))
    {
    <div class="row mb-7">
    <label class="w-250px fw-bold">@SharedLocalizer["RequesterAdmin_DisplayName"]</label>
    <div class="col-12 col-sm-6">
    <span class="fw-bolder fs-6 text-gray-800">: @Model.RequesterAdmin</span>
    </div>
    </div>
    <div class="row mb-7">
    <label class="w-250px fw-bold">@SharedLocalizer["RequestDescription_DisplayName"]</label>
    <div class="col-12 col-sm-6">
    <span class="fw-bolder fs-6 text-gray-800">: @Model.RequestDescription</span>
    </div>
    </div>
    <div class="row mb-7">
    <label class="w-250px fw-bold">@SharedLocalizer["RevisionConclusion_DisplayName"]</label>
    <div class="col-12 col-sm-6">
    <span class="fw-bolder fs-6 text-gray-800">: @Model.RevisionConclusion</span>
    </div>
    </div>

    } *@
</div>
<div class="accordion" id="accordionExample">
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingTwo">
            <button class="accordion-button collapsed fw-bolder d-flex align-items-center" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">

                <i class="bi bi-chevron-down me-2"></i>
                @SharedLocalizer["Question_Details"]
            </button>
        </h2>
        <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <div class="card-body row fs-6 py-10 px-10 py-lg-10 px-lg-15">
                    <div class="row mb-7 col-6 mt-3">
                        <label class="w-250px fw-bold ">@Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.CreatedBy)</label>
                        <div class="col-12 col-sm-6">
                            <span class="fw-bolder fs-6 text-gray-800">: @Model.AdminQuestionApprovedVM.CreatedBy</span>
                        </div>
                    </div>
                    <div class="row mb-7 col-6 mt-3">
                        <label class="w-250px fw-bold">
                            @Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.AverageAnswerTime)
                        </label>
                        <div class="col-12 col-sm-6">
                            <span class="fw-bolder fs-6 text-gray-800">
                                :
                                @if (Model.AdminQuestionApprovedVM.AverageAnswerTime != TimeSpan.Zero)
                                {
                                    @Html.DisplayFor(model => model.AdminQuestionApprovedVM.AverageAnswerTime)
                                }
                                else
                                {
                                    @SharedLocalizer["Question-Not-Used"]
                                }
                            </span>
                        </div>
                    </div>
                    <div class="row mb-7 col-6">
                        <label class="w-250px fw-bold  ">@Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.CreatedDate)</label>
                        <div class="col-12 col-sm-6">
                            <span class="fw-bolder fs-6 text-gray-800">: @Model.AdminQuestionApprovedVM.CreatedDate.ToShortDateString()</span>
                        </div>
                    </div>
                    <div class="row mb-7 col-6">
                        <label class="w-250px fw-bold">
                            @Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.LongestAnswerTime)
                        </label>
                        <div class="col-12 col-sm-6">
                            <span class="fw-bolder fs-6 text-gray-800">
                                :
                                @if (Model.AdminQuestionApprovedVM.LongestAnswerTime != TimeSpan.Zero)
                                {
                                    @Html.DisplayFor(model => model.AdminQuestionApprovedVM.LongestAnswerTime)
                                }
                                else
                                {
                                    @SharedLocalizer["Question-Not-Used"]
                                }
                            </span>
                        </div>
                    </div>
                    <div class="row mb-7 col-6">
                        <!-- Subject Label ve Değer -->
                        <label class="w-250px fw-bold">
                            @Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.SubjectName)
                        </label>
                        <div class="col-12 col-sm-6">
                            <span class="fw-bolder fs-6 text-gray-800">
                                : @Model.AdminQuestionApprovedVM.SubjectName
                            </span>
                        </div>
                    </div>
                    @* <div class="row mb-7 col-6">
                    <label class="w-250px fw-bold  ">
                    @Html.DisplayNameFor(model => model.SubtopicName)
                    </label>
                    <div class="col-12 col-sm-6">
                    <span class="fw-bolder fs-6 text-gray-800">
                    : @string.Join(", ", Model.SubtopicName)
                    </span>
                    </div>
                    </div> *@
                    <div class="row mb-7 col-6">
                        <label class="w-250px fw-bold">
                            @Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.ShortestAnswerTime)
                        </label>
                        <div class="col-12 col-sm-6">
                            <span class="fw-bolder fs-6 text-gray-800">
                                :
                                @if (Model.AdminQuestionApprovedVM.ShortestAnswerTime != TimeSpan.Zero)
                                {
                                    @Html.DisplayFor(model => model.AdminQuestionApprovedVM.ShortestAnswerTime)
                                }
                                else
                                {
                                    @SharedLocalizer["Question-Not-Used"]
                                }
                            </span>
                        </div>
                    </div>
                    <div class="row mb-7 col-6">
                        <label class="w-250px fw-bold  ">
                            @Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.SubtopicName)
                        </label>
                        <div class="col-12 col-sm-6">
                            <span class="fw-bolder fs-6 text-gray-800">
                                : @string.Join(", ", Model.AdminQuestionApprovedVM.SubtopicName)
                            </span>
                        </div>
                    </div>
                    <div class="row mb-7 col-6">
                        <label class="w-250px fw-bold  ">
                            @Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.QuestionType)
                        </label>
                        <div class="col-12 col-sm-6">
                            <span class="fw-bolder fs-6 text-gray-800">
                                : @Html.DisplayFor(model => model.AdminQuestionApprovedVM.QuestionType)
                            </span>
                        </div>
                    </div>
                    <div class="row mb-7 col-6">
                        <label class="w-250px fw-bold">
                            @Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.RightAnswerCount)
                        </label>
                        <div class="col-12 col-sm-6">
                            <span class="fw-bolder fs-6 text-gray-800">
                                :
                                @Html.DisplayFor(model => model.AdminQuestionApprovedVM.RightAnswerCount)
                            </span>
                        </div>
                    </div>
                    <div class="row mb-7 col-6">
                        <label class="w-250px fw-bold  ">
                            @Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.QuestionDifficultyName)
                        </label>
                        <div class="w-250px fw-bold">
                            <span class="fw-bolder fs-6 text-gray-800">
                                : @Html.DisplayFor(model => model.AdminQuestionApprovedVM.QuestionDifficultyName)
                            </span>
                        </div>
                    </div>
                    <div class="row mb-7 col-6">
                        <label class="w-250px fw-bold">
                            @Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.WrongAnswerCount)
                        </label>
                        <div class="col-12 col-sm-6">
                            <span class="fw-bolder fs-6 text-gray-800">
                                :
                                @Html.DisplayFor(model => model.AdminQuestionApprovedVM.WrongAnswerCount)
                            </span>
                        </div>
                    </div>
                    <div class="row mb-7 col-6">
                        @if ((Model.AdminQuestionApprovedVM.ModifiedDate.Date == Model.AdminQuestionApprovedVM.CreatedDate.Date) && (Model.AdminQuestionApprovedVM.ModifiedDate.Hour == Model.AdminQuestionApprovedVM.CreatedDate.Hour)
                        && (Model.AdminQuestionApprovedVM.ModifiedDate.Minute == Model.AdminQuestionApprovedVM.CreatedDate.Minute))
                        {
                            <label class="w-250px fw-bold  ">@Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.ModifiedDate)</label>
                            <div class="col-12 col-sm-6">
                                <label id="ModifiedDate" name="ModifiedDate">: @SharedLocalizer["IsNotModified"]</label>
                            </div>
                        }
                        else
                        {
                            <label class="w-250px fw-bold ">@Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.ModifiedDate)</label>
                            <div class="col-12 col-sm-6">
                                <span class="fw-bolder fs-6 text-gray-800" id="ModifiedDate" name="ModifiedDate">: @Model.AdminQuestionApprovedVM.ModifiedDate.ToShortDateString() (@Model.AdminQuestionApprovedVM.ModifiedDate.ToString("HH:mm"))</span>
                            </div>
                        }
                    </div>
                    <div class="row mb-7 col-6">
                        <label class="w-250px fw-bold">
                            @Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.EmptyAnswerCount)
                        </label>
                        <div class="col-12 col-sm-6">
                            <span class="fw-bolder fs-6 text-gray-800">
                                :
                                @Html.DisplayFor(model => model.AdminQuestionApprovedVM.EmptyAnswerCount)
                            </span>
                        </div>
                    </div>
                    <div class="row mb-7 col-6"></div>
                    <div class="row mb-7 col-6">
                        <label class="w-250px fw-bold">
                            @Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.TimesQuestionUsedInExam)
                        </label>
                        <div class="col-12 col-sm-6">
                            <span class="fw-bolder fs-6 text-gray-800">
                                :
                                @Html.DisplayFor(model => model.AdminQuestionApprovedVM.TimesQuestionUsedInExam)
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="rejectModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="reject-form" asp-action="Reject" method="post">
                @* <div class="btn btn-icon btn-sm btn-active-icon-primary" style="padding-left: 94%" data-kt-users-modal-action="close">
                <!--begin::Svg Icon | path: icons/duotune/arrows/arr061.svg-->
                <span class="svg-icon svg-icon-1">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="currentColor" />
                <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="currentColor" />
                </svg>
                </span>
                <!--end::Svg Icon-->
                </div> *@
                <div class="modal-header">
                    <button id="reject-form-close" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input asp-for="AdminQuestionApprovedVM.Id" class="form-control" hidden />
                    <div class="col-sm-12">
                        <label asp-for="AdminQuestionApprovedVM.RejectComment" class="fw-bolder ">@SharedLocalizer["Reject_Comment"]</label>
                        <textarea asp-for="AdminQuestionApprovedVM.RejectComment" class="form-control" rows="3" placeholder="@SharedLocalizer["Comment"]" required></textarea>
                        <span asp-validation-for="AdminQuestionApprovedVM.RejectComment" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger me-2" asp-action="Reject" asp-route-id=@Model.AdminQuestionApprovedVM.Id> @SharedLocalizer["Reject"] </button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="reviewModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="revise-form" asp-action="Review" method="post">
                @* <div class="btn btn-icon btn-sm btn-active-icon-primary" style="padding-left: 94%" data-kt-users-modal-action="cancel">
                <!--begin::Svg Icon | path: icons/duotune/arrows/arr061.svg-->
                <span class="svg-icon svg-icon-1">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                <rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="currentColor" />
                <rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="currentColor" />
                </svg>
                </span>
                <!--end::Svg Icon-->
                </div> *@
                <div class="modal-header">
                    <button id="revise-form-close" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input asp-for="AdminQuestionApprovedVM.Id" class="form-control" hidden />
                    <div class="col-sm-12">
                        <label asp-for="AdminQuestionApprovedVM.TrainerID" class="fw-bolder "></label>
                        <select asp-for="AdminQuestionApprovedVM.TrainerID" class="form-control">
                            <option value="">@Model.AdminQuestionApprovedVM.CreatedBy</option>
                            @foreach (var item in ViewBag.TrainerList as List<BAExamApp.Dtos.Trainers.TrainerListDto>)
                            {
                                if (Model.AdminQuestionApprovedVM.TrainerID == item.Id)
                                {
                                    <option value="@item.Id" selected>@item.FullName</option>
                                }
                                else
                                {
                                    <option value="@item.Id">@item.FullName</option>
                                }
                            }
                        </select>

                        <span asp-validation-for="AdminQuestionApprovedVM.TrainerID" class="text-danger"></span>
                    </div>
                    <div class="col-sm-12">
                        <label asp-for="AdminQuestionApprovedVM.RequestDescription" class="fw-bolder "></label>
                        <textarea asp-for="AdminQuestionApprovedVM.RequestDescription" class="form-control" rows="3" placeholder="@SharedLocalizer["Comment"]" required></textarea>
                        <span asp-validation-for="AdminQuestionApprovedVM.RequestDescription" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-warning" asp-action="Review" asp-route-id=@Model.AdminQuestionApprovedVM.Id>@SharedLocalizer["Revise"]</button>
                </div>
            </form>
        </div>
    </div>

</div>

@* Revision History *@
<div class="accordion" id="accordionExample2">
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingOne">
            <button class="accordion-button collapsed fw-bolder d-flex align-items-center" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">

                <i class="bi bi-chevron-down me-2"></i>
                @SharedLocalizer["Question_Revision_List", SharedLocalizer["Question"]]
            </button>
        </h2>
        <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample2">
            <div class="accordion-body">
                @if (ViewBag.QuestionRevisionVB is not null)
                {

                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th class="fw-bolder">@Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.CreatedDate)</th>
                                <th class="fw-bolder">@Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.RequesterAdminName)</th>
                                <th class="fw-bolder">@Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.ModifiedDate)</th>
                                <th class="fw-bolder">@Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.RequestedTrainerName)</th>
                                <th class="fw-bolder">@Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.RequestDescription)</th>
                                <th class="fw-bolder">@Html.DisplayNameFor(model => model.AdminQuestionApprovedVM.RevisionConclusion)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in ViewBag.QuestionRevisionVB)
                            {
                                <tr>
                                    <td class="fw-bolder">@item.CreatedDate.ToString("dd.MM.yyyy")</td>
                                    <td class="fw-bolder">@item.RequesterAdminName</td>
                                    <td class="fw-bolder">@item.ModifiedDate.ToString("dd.MM.yyyy")</td>
                                    <td class="fw-bolder">@item.RequestedTrainerName</td>
                                    <td class="fw-bolder">@item.RequestDescription</td>
                                    <td class="fw-bolder">@item.RevisionConclusion</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <!-- Pagination Controls -->
                    <div class="col-sm-12 col-md-5 d-flex align-items-center justify-content-center justify-content-md-start">
                        <div class="dataTables_length" id="kt_datatable_example_1_length">
                            <label>
                                <select id="pageSizeDropdown" name="kt_table_users_length" aria-controls="kt_table_users" class="form-select form-select-sm form-select-solid">
                                    <option value="10">10</option>
                                    <option value="25">25</option>
                                    <option value="50">50</option>
                                    <option value="100">100</option>
                                
                                </select>
                            </label>
                        </div>
                        <div class="col-5">
                            <span class="text" style="white-space:nowrap">
                                @SharedLocalizer["Total"] @Model.PagedList.TotalItemCount @SharedLocalizer["From"] @(Model.PagedList.PageNumber * Model.PagedList.PageSize - (Model.PagedList.PageSize - 1))
                                @SharedLocalizer["To"] @(Model.PagedList.PageNumber * Model.PagedList.PageSize > Model.PagedList.TotalItemCount ? Model.PagedList.TotalItemCount : Model.PagedList.PageNumber * Model.PagedList.PageSize)
                                @SharedLocalizer["Records_Are_Being_Displayed"]
                            </span>
                        </div>


                    </div>
                    <div class="d-flex justify-content-end mt-3">
                        @Html.PagedListPager(Model.PagedList,
                                 page => Url.Action("GetQuestionsByGivenValues", new
                                 {
                                     page,
                                     pageSize = ViewBag.PageSize,
                                     showAllQuestions = ViewBag.ShowAllQuestions,
                                     state = ViewData["Question_State"],
                                     // Additional filter parameters
                                     content = ViewBag.Content,                   // Example filter parameter
                                     subjectName = ViewBag.SubjectName,           // Make sure these match your action method's parameter names
                                     subtopicName = ViewBag.SubtopicName,
                                     questionDifficultyName = ViewBag.QuestionDifficultyName,
                                     createdDate = ViewBag.CreatedDate
                                 }),
                                 new PagedListRenderOptions
                    {
                        Display = PagedListDisplayMode.Always,
                        UlElementClasses = new[] { "pagination", "justify-content-center" },
                        LiElementClasses = new[] { "page-item" },
                        PageClasses = new[] { "page-link" },
                        LinkToFirstPageFormat = @localizer["First"],
                        LinkToLastPageFormat = @localizer["Last"],
                        ContainerDivClasses = new[] { "d-flex", "justify-content-center" }
                    })
                    </div>
                }
                else
                {
                    <div class="alert alert-info fw-bolder">
                        @SharedLocalizer["No_Data"]
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .accordion-button::after {
        display: none; /* Varsayılan ok işaretini gizler */
    }

    .accordion-button.collapsed i {
        transform: rotate(0deg);
        transition: transform 0.2s ease;
    }

    .accordion-button:not(.collapsed) i {
        transform: rotate(180deg); /* Ok işaretini döndürür */
        transition: transform 0.2s ease;
    }

</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

@section Scripts {
    <script>
        //document.getElementById('reject-form-close').addEventListener('click', function () {
        //    document.getElementById('reject-form').reset();
        //});
        //document.getElementById('revise-form-close').addEventListener('click', function () {
        //    document.getElementById('revise-form').reset();
        //});
    </script>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/adminQuestionList.js"></script>
    <script src="~/lib/limonte-sweetalert2/sweetalert2.all.js"></script>
    <script src="~/newlayouts/src/js/custom/apps/user-management/question/questionUpdate.js"></script>
    <script src="~/newlayouts/src/js/custom/apps/user-management/question/questionSelect.js"></script>

    <script>
        var localizedStrings = {
            newoption: '@SharedLocalizer["New_Option"]',
            addnewoption: '@SharedLocalizer["Add_New_Options"]',
            answers: '@SharedLocalizer["Answers"]',
            choose: '@SharedLocalizer["Choose"]',
            text: '@SharedLocalizer["Text"]',
            image: '@SharedLocalizer["Image"]',
            true: '@SharedLocalizer["True"]',
            false: '@SharedLocalizer["False"]'

        };
        var localizedTexts = {
            unsavedChangesTitle: '@SharedLocalizer["Unsaved_Changes_Title"]',
            unsavedChangesText: '@SharedLocalizer["Unsaved_Changes_Text"]',
            confirmButtonText: '@SharedLocalizer["Yes_Leave"]',
            cancelButtonText: '@SharedLocalizer["No_Stay"]',
            formSubmittedText: '@SharedLocalizer["Form_Submitted_Text"]',
            okButtonText: '@SharedLocalizer["Ok_Button_Text"]'
        };
        // Reject Modal Cancel button handler
        const rejectCloseButton = document.querySelector('[data-kt-users-modal-action="close"]');
        rejectCloseButton.addEventListener('click', e => {
            e.preventDefault();

            Swal.fire({
                title: localizedTexts.unsavedChangesTitle,
                text: localizedTexts.unsavedChangesText,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: localizedTexts.confirmButtonText,
                cancelButtonText: localizedTexts.cancelButtonText
            }).then((result) => {
                if (result.isConfirmed) {
                    // Event handler'ı geçici olarak kaldır
                    $('#rejectModal').off('hide.bs.modal');
                    // Modalı kapat
                    $('#rejectModal').modal('hide');
                    // Modal tamamen kapandıktan sonra event handler'ı tekrar ekle
                    $('#rejectModal').on('hidden.bs.modal', function () {
                        addRejectModalCloseConfirmation();
                        $(this).find('form').trigger('reset');
                    });
                }
            });
        });

        // Razor tarafından gönderilen `pageSize` ve `questionState` değişkenlerini JavaScript değişkenlerine atayın
    var currentPageSize = "@ViewBag.PageSize" || "10";  // Varsayılan değer olarak 10
    var questionState = "@ViewData["Question_State"]"; 
    var showAllQuestions = "@ViewBag.ShowAllQuestions" === "True";

             document.addEventListener('DOMContentLoaded', function () {
                    // Başlangıç değeri olarak dropdown'a currentPageSize değerini ayarlayın
                      $('#pageSizeDropdown').val(currentPageSize);
                });

                $(document).ready(function () {
                      $('#pageSizeDropdown').change(function () {
                        var selectedPageSize = $(this).val();

                           // API endpoint oluştur
                                        var url = '@Url.Action("QuestionDetails", "Question")';

                                 url += `?pageSize=${selectedPageSize}&showAllQuestions=${showAllQuestions}&state=${encodeURIComponent(questionState)}&page=1`;


                                 window.location.href = url;  // Yeni URL'e yönlendir
                                });
                            });


                         $(document).ready(function () {
                          $('#pageSizeDropdown').change(function () {
                          var selectedPageSize = $(this).val();

                                 // API endpoint oluştur
                                              var url = '@Url.Action("QuestionDetails", "Question")';

                                    url += `?pageSize=${selectedPageSize}&showAllQuestions=${showAllQuestions}&state=${encodeURIComponent(questionState)}&page=1`;


                          window.location.href = url;  // Yeni URL'e yönlendir
                          });
                         });


        // Review Modal Cancel button handler
        const reviewCancelButton = document.querySelector('[data-kt-users-modal-action="cancel"]');
        reviewCancelButton.addEventListener('click', e => {
            e.preventDefault();

            Swal.fire({
                title: localizedTexts.unsavedChangesTitle,
                text: localizedTexts.unsavedChangesText,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: localizedTexts.confirmButtonText,
                cancelButtonText: localizedTexts.cancelButtonText
            }).then((result) => {
                if (result.isConfirmed) {
                    // Event handler'ı geçici olarak kaldır
                    $('#reviewModal').off('hide.bs.modal');
                    // Modalı kapat
                    $('#reviewModal').modal('hide');
                    // Modal tamamen kapandıktan sonra event handler'ı tekrar ekle
                    $('#reviewModal').on('hidden.bs.modal', function () {
                        addReviewModalCloseConfirmation();
                        $(this).find('form').trigger('reset');
                    });
                }
            });
        });

        // Modal kapatma işlemi için event handler
        function addRejectModalCloseConfirmation() {
            // Reject Modal'ı kapatmak için gerekli işlemleri burada tanımlayabilirsiniz.
        }

        function addReviewModalCloseConfirmation() {
            // Review Modal'ı kapatmak için gerekli işlemleri burada tanımlayabilirsiniz.
        }

        // REVISION HISTORY PEGINATION SCRIPT
        <script>
            $(document).ready(function () {
                var dt = $("#kt_table_questions").DataTable({
                    lengthMenu: [10, 25, 50, 100],
                    order: [[0, 'desc']], // CreatedDate kolonuna göre sıralama, 0 indeksli kolonun default olarak desc sıralaması
                    dom: '<"row"<"col-sm-12"t>>' +
                        '<"row"<"col-sm-12 col-md-1"l><"col-sm-12 col-md-5"i><"col-sm-12 col-md-6"p>>',
                    language: {
                        emptyTable: "Tabloda herhangi bir veri bulunmamaktadır",
                        infoEmpty: "Gösterilecek hiçbir kayıt yok",
                        infoFiltered: "(toplam _MAX_ kayıt içerisinden filtrelenmiştir)",
                        zeroRecords: "Eşleşen kayıt bulunamadı",
                    },
                });

                $('body').on('change', 'select[name="kt_table_questions_length"]', function () {
                    dt.page.len($(this).val()).draw();
                    $(this).css({
                        'border': '0 solid transparent',
                        'transition': 'color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out'
                    });
                });

                dt.on('draw.dt', function () {
                    updateInfoText(dt.page.info());
                });

                function updateInfoText(pageInfo) {
                    var infoText = pageInfo.recordsTotal + " kayıttan " + (pageInfo.start + 1) + " ile " + pageInfo.end + " arasındaki kayıtlar gösteriliyor";
                    $('#kt_table_questions_info').html(infoText).css({
                        'margin-top': '6px',
                        'font-size': '14px',
                        'font-family': 'Poppins, Helvetica, sans-serif',
                    });
                }

                updateInfoText(dt.page.info());

                function updatePaginationArrows() {
                    var prevButton = $('#kt_table_questions_previous a');
                    prevButton.html('<i class="fa fa-chevron-left"></i>');
                    var nextButton = $('#kt_table_questions_next a');
                    nextButton.html('<i class="fa fa-chevron-right"></i>');
                    var pageButtons = $('#kt_table_questions_paginate .page-item');
                    var activePage = $('#kt_table_questions_paginate .page-item.active a');
                    activePage.css({
                        'color': '#ffffff'
                    });
                }

                updatePaginationArrows();

                dt.on('draw.dt', function () {
                    updatePaginationArrows();
                });
            });
    </script>

                    </script>
}




